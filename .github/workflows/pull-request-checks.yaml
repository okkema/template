name: pull-request-checks
on:
  pull_request:
jobs:
  require-changelog:
    name: Pull request requires changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
      - name: Check that changelog updated
        run: |
          if ! grep --quiet CHANGELOG.md <(echo "${{ steps.changed-files.outputs.all_changed_files }}")
          then
            echo "ERROR - Pull request check failed"
            echo "Changelog must be included in pull request."
            exit 1
          fi
  require-bump:
    name: Pull request title requires version bump
    runs-on: ubuntu-latest
    outputs:
      bump: ${{ steps.check.outputs.bump }}
    steps:
      - name: Check that title contains bump
        id: check
        run: |
          VERSIONS=(major minor patch)
          for VERSION in ${VERSIONS[@]}
          do
            if [[ "${{ github.event.pull_request.title }}" =~ "#$VERSION" ]]
            then
              BUMP=$VERSION
              break
            fi
          done
          if [ -z "$BUMP" ]
          then
            echo "ERROR - Pull request check failed"
            echo "Pull request title must contain version bump."
            echo "Values:  major,minor,patch"
            echo "Example: \"Some new feature #minor\""
            exit 1
          fi
          echo "bump=$BUMP" >> "$GITHUB_OUTPUT"
  require-changelog-bump-match:
    name: Pull request version bump must match changelog
    runs-on: ubuntu-latest
    needs: [require-changelog, require-bump]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check that latest changelog entry matches the planned version bump
        env:
          BUMP: ${{ needs.require-bump.outputs.bump }}
        run: |
          TAG=$(npm version $BUMP --commit-hooks false --git-tag-version false)
          CHANGELOG=$(head -n 1 CHANGELOG.md)
          if ! [[ $CHANGELOG =~ "${TAG:1}" ]]
          then
            echo "ERROR - Commit failed"
            echo "Changelog does not match next $BUMP version."
            echo "Changelog:    ${CHANGELOG:2}"
            echo "Next version: ${TAG:1}"
            exit 1
          fi